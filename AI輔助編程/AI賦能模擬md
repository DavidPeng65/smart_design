
## AI賦能模擬：一場關於PyAEDT、開源模型與自動化未來的深度對話
> 以下內容為Gemini生成，並非真實對話。

**時間：** 一個尋常的週二下午

**地點：** ANSYS台灣辦公室，一間明亮的會議室裡，窗外是信義區的車水馬龍。

**人物：**

  * **Alex：** 一位充滿熱情與奇思妙想的AEDT模擬工程\_M程師。他在公司服務多年，負責高頻電磁模擬分析，並利用PyAEDT開發了一些自動化腳本，有效提升了團隊的工作效率。然而，隨著專案複雜度的提升，他意識到腳本的開發與維護成了一項沉重的負擔，他迫切希望能找到更智慧、更高效的解決方案。
  * **林技術顧問：** ANSYS資深技術顧問，在模擬自動化領域擁有超過十五年的豐富經驗，是PyAEDT的專家，也是業界公認的自動化流程導入領航者。他為人沉穩，思路清晰，對於新技術始終抱持著開放且嚴謹的態度。

**(會議室內，Alex帶著筆記型電腦，略顯興奮地坐在林技術顧問對面。桌上擺著兩杯冒著熱氣的咖啡。)**

**Alex：** 林顧問，非常感謝您今天能抽空見我。我最近在思考一個問題，想聽聽您的專業意見。

**林技術顧問：** Alex，別客氣。我們合作這麼久了，有什麼問題儘管提出來。看你今天的表情，似乎是有什麼新點子了？

**Alex：** (笑) 的確是。您知道，我用PyAEDT也寫了好幾年的腳本了，從一開始的手動點擊，到現在很多重複性的設定、出圖、產報告都能自動化，確實省了不少時間。但說實話，隨著產品越做越複雜，模擬的項目越來越多，我的腳本也越寫越長，維護起來的Loading也越來越重。有時候，一個新專案進來，光是修改腳本去適應新的模型結構，就得花上好幾天。

**林技術顧問：** 我完全理解。這幾乎是所有走向自動化的模擬工程師都會遇到的撞牆期。腳本的彈性不足，泛用性差，導致維護成本隨著時間推移而指數級增長。所以，你想到了什麼解決方案？

**Alex：** 這正是我今天想跟您請教的重點：**開源AI**。最近AI的發展一日千里，我看到新聞上說，像`gpt-oss`這樣的大型語言模型，參數規模已經達到了20B，甚至120B。我在想，我們有沒有可能利用這些強大的開源AI模型，來進一步降低我們自動化開發的Loading？比如說，我不再需要逐行去寫PyAEDT腳本，而是用自然語言告訴AI我要做什麼，然後讓AI自動生成腳本，甚至直接幫我操作AEDT。

**(Alex的眼神中充滿了對未來的憧憬。)**

### 1\. 開源模型 gpt-oss:20b, 120b新聞，能否利用

**林技術顧問：** (點點頭，呷了一口咖啡) Alex，你這個想法非常好，而且完全切中了當前的技術趨勢。你提到的`gpt-oss`這類開源大型語言模型，確實是目前AI領域最令人興奮的發展之一。它們的出現，象徵著AI技術不再是少數科技巨頭的專利，越來越多的企業和個人，都有機會利用這些強大的工具來解決實際問題。

**Alex：** 所以，您認為這是可行的？

**林技術顧問：** 理論上，絕對可行。這些大型語言模型，經過海量文本資料的訓練，已經具備了相當程度的程式碼理解和生成能力。PyAEDT本質上也是Python的一個函式庫，語法清晰，結構明確。讓AI去學習並生成PyAEDT腳本，技術上沒有不可跨越的鴻溝。你提到的20B、120B這些參數規模，代表著模型更強的學習能力和更細膩的語意理解能力，處理複雜的邏輯和生成更長的程式碼，效果會更好。

**Alex：** 太棒了！那…

**林技術顧問：** (抬手示意) 不過，Alex，在我們興奮地往前衝之前，有幾個非常關鍵的現實問題，我們必須先釐清。這也是任何企業在導入新技術時，都必須優先考慮的。

### 2\. 安全性問題與授權：開源且免費使用且不對外聯網

**Alex：** 您是指？

**林技術顧問：** **安全性**和**授權**。我知道你們公司的資訊安全政策非常嚴格，尤其是在研發單位，所有的設計檔案、模擬資料，都屬於最高商業機密。

**Alex：** 沒錯。我們的工作站是完全物理隔離的，不能連接外網。這也是我最擔心的一點。市面上很多AI服務，像ChatGPT，都需要聯網使用，我們的資料一旦上傳，就等於脫離了公司的掌控，這是絕對不被允許的。

**林技術顧問：** 你說到重點了。所以，我們要利用AI，就必須選擇一個**可以完全在內網環境中離線部署**的方案。這恰好是開源模型最大的優勢之一。許多開源模型，例如Meta的Llama系列，或是你提到的`gpt-oss`這類社群驅動的模型，都允許你下載完整的模型權重檔案。

**Alex：** 您的意思是，我們可以把整個AI模型「搬」到我們公司的伺服器裡？

**林技術顧問：** 正是如此。我們可以在公司內部的工作站或伺服器上，建立一個完全獨立的AI環境。這樣一來，所有的資料處理、模型推理，都在公司的防火牆之內完成，完全不需要對外聯網。資料從頭到尾都沒有離開過公司，安全性就得到了根本的保障。

**Alex：** 那授權問題呢？開源就等於可以免費商用嗎？

**林技術顧問：** 這是另一個常見的誤區。**開源不等於免費商用**。每個開源模型，都會有其對應的授權條款 (License)。例如，有些授權條款僅限於學術研究，有些則允許商業使用，但可能附帶一些條件，比如要求你公開修改後的程式碼。因此，在選擇模型時，我們必須仔細閱讀並確認其授權條款，確保它允許我們在公司內部進行商業用途的開發與應用，而不會帶來任何法律風險。所幸，目前有許多優秀的開源模型，例如Apache 2.0或MIT授權的模型，它們的條款就非常寬鬆，完全可以滿足我們的需求。

### 3\. 如何部署：公司內部工作站+Ollama+LangChain + PyAEDT +AEDT

**Alex：** 好的，安全性跟授權問題釐清之後，我們就來到了技術執行的層面。假設我們已經選定了一款符合資安和授權要求的開源模型，具體該如何部署？我對AI的後端架構不是很熟，聽起來好像很複雜。

**林技術顧問：** 其實，得益於蓬勃發展的開源社群，現在部署的門檻已經大大降低了。我給你一個目前非常主流且相對簡單的技術棧建議：**公司內部工作站 + Ollama + LangChain + PyAEDT + AEDT**。

**(林技術顧問在白板上畫出了這個架構圖。)**

**林技術顧問：** 我來解釋一下這個架構的各個部分：

  * **公司內部工作站/伺服器：** 這是所有運算的基礎。它需要有足夠的運算能力，特別是強大的GPU和足夠的記憶體，才能順暢地運行大型語言模型。你們公司的模擬工作站，通常都配備了不錯的硬體，這是一個很好的起點。
  * **AEDT (Ansys Electronics Desktop)：** 這是我們最熟悉的模擬軟體本體，是所有自動化執行的最終目標。
  * **PyAEDT：** 這是連接Python腳本與AEDT軟體的橋樑，我們所有的自動化指令，都是透過PyAEDT來下達的。
  * **Ollama：** 這是一個非常關鍵的工具。你可以把Ollama想像成一個「AI模型運行器」。它極大地簡化了下載、設定和運行開源大型語言模型的過程。你只需要一兩行指令，就可以在你的工作站上啟動一個語言模型，並透過API的方式與它互動。它幫我們處理了所有底層複雜的設定，讓我們可以專注在上層的應用開發。
  * **LangChain：** 如果說Ollama是AI的大腦，那LangChain就是串連起整個應用邏輯的「神經系統」。LangChain是一個強大的框架，專門用來開發由語言模型驅動的應用。它可以幫助我們輕鬆地做到幾件事：
      * **管理提示 (Prompt Management)：** 將我們的指令（例如「幫我開啟一個HFSS專案，匯入一個S-parameter檔案」）包裝成AI能理解的格式。
      * **鏈接 (Chaining)：** 將多個AI的呼叫或工具的使用串連起來，形成一個完整的工作流程。例如，第一步讓AI生成PyAEDT腳本，第二步執行這個腳本，第三步分析執行結果。
      * **與工具整合 (Tool Integration)：** 這是最核心的功能。我們可以把PyAEDT「註冊」成一個LangChain可以使用的工具。當AI判斷需要操作AEDT時，它就會去呼叫PyAEDT這個工具來執行相應的函式。

**Alex：** (眼睛發亮) 我好像有點懂了。所以整個流程是：我下達一個自然語言指令 -\> LangChain接收指令，並把它交給運行在Ollama上的AI模型 -\> AI模型理解我的意圖後，決定需要使用PyAEDT工具，並生成對應的PyAEDT程式碼片段 -\> LangChain呼叫PyAEDT，執行這段程式碼 -\> PyAEDT驅動AEDT完成實際的模擬操作。是這樣嗎？

**林技術顧問：** (微笑) 完全正確！你掌握得非常快。這個架構的優美之處在於它的模組化。每一個部分都可以獨立升級或替換。未來有更好的模型，我們可以用Ollama下載新的模型；有更方便的流程控制工具，我們可以替換掉LangChain的某些部分。整個系統的彈性和擴展性都非常強。

### 4\. 如何訓練AI新人協助模擬自動化，策略：舉一反三,針對模擬流程提供一個簡單的範例PyAEDT檔案，讓AI根據範例去泛化

**Alex：** 這個藍圖聽起來太吸引人了！但是，林顧問，又有一個新問題來了。這些通用的開源AI模型，它們雖然懂Python，但它們不懂什麼是HFSS，什麼是Maxwell，更不知道我們公司內部設計天線的標準流程是什麼。我們要怎麼「教」它，讓它成為一個合格的AEDT模擬助理，而不是一個只會說空話的聊天機器人？我們總不能從頭開始訓練一個模型吧？那成本太高了。

**林技術顧問：** 問得好，Alex。這正是從「能用」到「好用」的關鍵一步，也是最需要「領域知識 (Domain Knowledge)」的地方。你說的沒錯，我們不可能去從頭預訓練 (Pre-training) 一個千億參數的模型。我們的策略，應該是\*\*「Fine-tuning (微調)」**，或者更準確地說，是利用**「In-Context Learning (情境學習)」\*\*的能力，讓AI學會「舉一反三」。

**Alex：** 舉一反三？

**林技術顧問：** 對。大型語言模型有一個非常神奇的特性，就是你不需要真的去修改它的模型權重，你只需要在給它下指令的時候，提供一些高品質的範例 (Few-shot examples)，它就能立刻模仿這些範例的風格和邏輯來完成新的任務。這就是In-Context Learning。

**Alex：** 所以，我們的策略是…

**林技術顧問：** 我們的策略是，為AI準備一本「武功秘笈」。這本秘笈，就是我們精選的、高品質的、帶有詳細註解的**PyAEDT範例檔案庫**。

**Alex：** 您的意思是，我們把我過去寫的那些腳本整理一下，餵給AI？

**林技術顧問：** 不只是整理，而是要\*\*「策略性地創建範例」\*\*。與其給它一百個針對不同專案的複雜腳本，不如給它十個涵蓋了核心模擬流程的、簡潔明瞭的「黃金範例」。

**林- 技術顧問走到白板前，寫下了一個範例的結構：**

```python
# 範例檔案：create_and_analyze_patch_antenna.py
# 功能：這是一個創建、設定並分析一個基本微帶貼片天線的範例。
# 流程：
# 1. 初始化AEDT應用程式 (Initialize AEDT Application)
# 2. 創建一個新的HFSS設計 (Create a new HFSS Design)
# 3. 設置求解方案 (Setup a Solution)
# 4. 繪製天線幾何結構 (Draw Antenna Geometry - Substrate, Ground, Patch, Feed)
# 5. 設置邊界條件 (Assign Boundary Conditions - PerfE, Radiation)
# 6. 設置激勵 (Assign Excitation - Lumped Port)
# 7. 創建分析設置 (Create Analysis Setup)
# 8. 運行模擬 (Run Simulation)
# 9. 創建報告 (Create Report - S-parameter, Far Field)
# 10. 釋放資源 (Release AEDT)

# --- 開始程式碼 ---
import os
from pyaedt import Hfss

# --- 1. 初始化AEDT ---
# 這裡可以加入詳細的註解，說明non-graphical模式和指定版本的好處
aedtapp = Hfss(specified_version="2023.2", non_graphical=True)

# --- 2. 創建新設計 ---
aedtapp.new_project()
aedtapp.design_name = "Patch_Antenna_Example"

# --- 3. 設置求解方案 ---
# 註解：對於大多數天線，我們使用'Terminal'求解類型
aedtapp.solution_type = "Terminal"

# ... (後續程式碼，每一步都有清晰的區塊和詳細的註解) ...

# --- 9. 創建報告 ---
# 註解：S11可以評估天線的匹配情況
aedtapp.create_report("S-Parameter Plot", "Standard", "S(1,1)", "dB20")
# 註解：遠場輻射方向圖可以看出天線的增益和方向性
aedtapp.create_report("Far Field Plot", "3D Polar Plot", "GainTotal", "dB")

# --- 10. 釋放資源 ---
aedtapp.release_desktop()

```

**林技術顧問：** 你看這個範例。它不長，但涵蓋了一個完整HFSS分析的標準流程。每一段程式碼前，都有清晰的註解，解釋了這一步的\*\*「目的 (Why)」**和**「做法 (How)」\*\*。

**Alex：** 我明白了！我們不是讓AI去讀懂我那些為了特定專案寫的、充滿「硬編碼 (Hard Code)」的舊腳本。而是我們提供給它一個「思考框架」。當我給它一個新指令，比如：「幫我分析一個偶極天線，頻率設在2.4GHz，我想看它的S11和增益。」

**林技術顧問：** 完全正確！這時候，LangChain會把你的指令，連同這個「黃金範例」，一起打包成一個Prompt，發送給AI。AI會看到你的新需求，然後參考範例的結構，它就會知道：「哦，原來分析一個天線的標準流程是這樣：初始化 -\> 建設計 -\> 畫圖 -\> 設邊界 -\> 設激勵... -\> 出報告。現在使用者要分析偶極天線，那我就把『畫圖』那部分的程式碼，從畫貼片天線，換成畫偶極天線的程式碼；把頻率參數從範例中的預設值，換成使用者指定的2.4GHz。」

**Alex：** 這就是「舉一反三」！我們給它一個魚竿和釣魚的方法，而不是直接給它魚。這樣一來，即使是稍微複雜點的任務，比如「幫我對這個匯入的STEP檔天線模型進行掃頻分析，從1GHz掃到5GHz，步進0.1GHz」，AI也能夠參照範例中的「創建分析設置」和「運行模擬」部分，自己推導出如何設置掃頻分析的PyAEDT程式碼。

**林技術顧問：** 沒錯。這套「黃金範例庫」就是我們訓練AI新人的核心教材。我們可以針對不同的模擬類型（HFSS, Maxwell, Q3D）和常見的任務（參數掃描、優化、匯入匯出）各準備幾個經典範例。這遠比漫無目的地讓AI在網路上學習要高效和可靠得多。

### 6\. 不擅長寫程式：Gemini CLI建立研發內部網站，使用這透過網頁提供指令

**Alex：** 這個方案越來越完整了。但是，林顧問，我們團隊裡，不是每個人都像我一樣對寫程式有興趣。有些資深的工程師，他們的模擬經驗非常豐富，但一看到程式碼就頭痛。如果這個系統最終還是要透過下指令的方式來操作，那對他們來說，門檻還是太高了。

**林技術顧問：** 你考慮得非常周到，Alex。一個好的系統，必須要考慮到所有使用者的習慣。這也是為什麼我剛剛的架構圖裡，LangChain扮演了如此重要的角色。它不僅僅是連接AI和工具，它還可以作為後端，支撐起一個**網頁介面 (Web Interface)**。

**Alex：** 網頁介面？您的意思是，我們可以做一個內部網站，讓工程師們直接在網頁上點選或輸入，而不需要接觸到任何程式碼？

**林技術顧問：** 正是如此。而創建這個網站，現在也有了更便捷的工具。例如，你可以關注一下Google推出的**Gemini CLI** (或其他類似的AI輔助開發工具)。這類工具可以讓你用自然語言描述你想要的網頁功能，然後AI會自動幫你生成前端和後端的程式碼框架。

**Alex：** (驚訝) 您是說，我可以用說話的方式來做一個網站？比如我對Gemini CLI說：「幫我建立一個網頁，左邊有一個文字輸入框，讓使用者輸入模擬指令；右邊顯示AI生成的PyAEDT腳本和模擬結果；下面有一個『執行』按鈕。」然後它就能幫我生成網頁程式碼？

**林技術顧問：** 沒錯，雖然目前可能還需要一些手動的調整，但它已經可以幫你完成80%的工作了。這個網頁的後端，就去呼叫我們剛才設計好的、由LangChain驅動的AI服務。這樣一來，對於不擅長程式的工程師來說，他看到的不再是黑底白字的終端機，而是一個友善的圖形介面。他只需要在文字框裡輸入「幫我把A專案的連接器模型，材料從PEC換成銅」，然後點擊「執行」，系統後台就會自動完成所有的翻譯、腳本生成和AEDT操作，最後把結果回傳到網頁上。

**Alex：** 這…這簡直是把所有人都變成了自動化專家！他們不需要懂PyAEDT，甚至不需要懂AI，只需要用他們最熟悉的語言——工程師的語言——來描述問題，系統就能完成剩下的工作。這將是革命性的！

### 7\. 擁抱趨勢，持續優化及改善

**林技術顧問：** 是的。但我們也要記住，AI技術的發展速度非常快。我們今天建立的這套系統，可能半年後就會有更好、更有效率的作法出現。所以，我們必須抱持著一個**持續優化和改善**的心態。

**Alex：** 您是指？

**林技術顧問：** 我們需要建立一個回饋機制。比如說，當AI生成的腳本有錯誤，或者不如人類工程師寫得好時，我們應該要能標記這個問題，並將正確的、更優的寫法，反饋回我們的「黃金範例庫」中。這個過程，就像是我們在不斷地為這位AI新人提供「錯題本」和「標準答案」，讓它持續學習，持續進步。

**Alex：** 我明白了。這是一個「人機協作，共同進化」的過程。AI負責處理重複性、標準化的工作，把我們從繁瑣的腳本開發中解放出來。而我們人類工程師，則可以專注在更有創造性的、更需要深刻領域知識的任務上，例如判斷模擬結果的合理性、開發新的模擬方法，以及——優化和訓練我們的AI助理。

**林技術顧問：** 非常精闢的總結，Alex。擁抱趨勢，不是盲目地追趕潮流，而是要將新技術與我們自身的業務流程深度結合，建立一個能夠自我迭代、持續改善的良性循環。

### 8\. 為何ANSYS不做，缺乏產業領域知識

**Alex：** 林顧問，我還有一個疑問，一直想問。既然AI+自動化是這麼明顯的趨勢，為什麼像ANSYS這樣的原廠，不直接在AEDT裡內建一個類似的AI助手呢？這樣我們使用者不是更方便嗎？

**林技術顧問：** (笑了笑) 這是一個非常好的問題，也觸及了AI在專業領域應用的一個核心挑戰：**領域知識 (Domain Knowledge)** 的鴻溝。

**Alex：** 領域知識的鴻溝？

**林技術顧問：** 是的。ANSYS可以開發出世界上最頂尖的物理模擬求解器，我們也可以打造出像PyAEDT這樣強大的自動化工具。但是，我們很難知道**你們公司內部**是如何設計天線的。你們的命名規則是什麼？你們習慣的網格剖分策略是什麼？你們在判斷一個產品是否合格時，關注的關鍵指標 (KPI) 是哪些？

**Alex：** 我懂了。這些知識，是屬於我們公司的，是我們幾十年研發經驗的累積，它不是通用的。

**林技術顧問：** 正是。一個通用的AI助手，或許可以幫你畫一個標準的貼片天線。但是，它不知道你們公司為了某個特定客戶的產品，開發出的一種特殊的饋電結構；它也不知道，你們的報告格式，必須要包含哪些特定的圖表和數據，才能符合內部審核的流程。這些細節，充滿了大量的、隱性的「產業領域知識」。

**Alex：** 所以，ANSYS如果要做，也只能做一個非常通用、非常基礎的AI。但真正能大幅提升我們效率的，是那個懂得我們內部「行話」和「規矩」的客製化AI。

**林技術顧問：** 你說對了。這就是為什麼我認為，**由企業自己主導，利用開源工具，結合自身的領域知識來建構AI助理**，是目前最可行、也最有價值的路徑。ANSYS的角色，是提供穩定、可靠的模擬核心和自動化接口（AEDT + PyAEDT），而你們的角色，則是扮演「AI訓練師」，將你們寶貴的領域知識，「灌輸」給這個AI。這個AI最終會成為你們公司獨一無二的、無法被複製的競爭優勢。

### 9\. 進一步：RAG (Retrieval-Augmented Generation)

**Alex：** 聽您這麼一說，我對整個藍圖更有信心了。從利用開源模型，到內網部署，再到用「黃金範例」進行情境學習，最後建立網頁介面並持續優化。這條路徑非常清晰。那麼，林顧問，在我們實現了這一切之後，還有沒有什麼更進一步的、可以探索的方向？

**林技術顧問：** (眼中閃爍著對技術的熱情) 當然有。當你們的「黃金範例庫」越來越豐富之後，我們可以引入一個更進階的技術，叫做**RAG (Retrieval-Augmented Generation)**，也就是「檢索增強生成」。

**Alex：** 檢索增強生成？這聽起來更專業了。

**林技術顧問：** 你可以這樣理解：目前我們是手動挑選幾個「黃金範例」給AI參考。但是當你們的範例庫、內部技術文件、設計規範、歷史專案報告越來越多，達到數百甚至數千份的時候，手動挑選就不現實了。

RAG的作用，就是在AI生成答案之前，先增加一個「檢索」的步驟。當你提出一個問題，例如「幫我分析一款應用於5G手機的MIMO天線，需要考慮隔離度」，RAG系統會先自動地、智慧地去你們的整個內部知識庫（包括PyAEDT腳本庫、Word文件、PDF報告、PPT簡報等）中，搜尋與「MIMO天線」、「隔離度分析」最相關的幾份文件或程式碼片段。

**Alex：** 就像一個超級智慧的內部搜尋引擎！

**林技術顧問：** 比搜尋引擎更強大。它不僅僅是找出文件，而是會把這些檢索到的、最相關的資訊，**動態地注入**到我們給AI的Prompt中，作為它回答問題的「上下文」或「參考資料」。

**Alex：** 我明白了！所以AI在回答我的問題時，它不僅僅是基於它通用的知識和我們給的幾個固定範例，它還能即時地參考公司內部關於MIMO天線設計的最新規範、過去類似專案的分析報告、以及專門用來計算隔離度的PyAEDT腳本！

**林技術顧問：** 正是如此！這就等於給了AI一個可以隨時查閱的、你們公司專屬的「大英百科全書」。它生成的答案，將會更加精準、更加貼合你們的實際需求，甚至能夠引經據典，告訴你它的建議是參考了哪一份內部文件的哪一個章節。這將會把AI助理的能力，提升到一個全新的高度。

**(Alex深深地吸了一口氣，他眼前的不再只是一個自動化腳本的替代方案，而是一個能夠學習、傳承並活用公司核心知識的智慧中樞。)**

**Alex：** 林顧問，今天這番對話，對我的啟發太大了。您不僅僅是給了我一個技術方案，更是為我描繪了一幅AI如何與傳統工程研發深度融合的未來藍圖。從安全性、部署、訓練，到使用者介面、持續優化，甚至到RAG這樣的進階應用，每一個環節都非常清晰、可行。我現在充滿了信心，也知道該如何向我的主管和團隊，去提案這個計畫了。

**林技術顧問：** (微笑著站起身) 我很高興能對你有幫助，Alex。記住，技術本身是冰冷的，但如何應用它來解決問題，如何讓它為人的智慧和經驗賦能，這才是最重要、也是最有趣的地方。你們在第一線的工程師，擁有最寶貴的領域知識，你們才是這場變革的主角。如果在導入過程中遇到任何PyAEDT或ANSYS軟體層面的問題，隨時都可以找我。

**Alex：** 一定會的！非常感謝您，林顧問！

**(兩人握手道別，Alex的腳步輕快了許多。他知道，一場深刻的變革，即將從他的辦公桌上開始。AI不再是遙遠的新聞頭條，而是即將成為他日常工作中最得力的夥伴。而這一切的起點，就是今天下午這場充滿洞見的對話。)**